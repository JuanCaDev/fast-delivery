{"version":3,"sources":["assets/images/image.jpg","assets/images/logo.png","data/options.js","views/Home.js","views/Option.js","routes.js","components/Button.js","components/Nav.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","options","id","title","subtitle","description","videoUrl","path","Home","className","src","image","alt","logo","Option","url","width","Routes","map","option","key","Button","children","buttonProps","Nav","to","App","basename","process","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wGAAAA,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,sLCkC5BC,EAlCC,CACd,CACEC,GAAI,EACJC,MAAO,wBACPC,SAAU,iBACVC,YAAY,6RAGZC,SAAU,2CACVC,KAAK,gBAEP,CACEL,GAAI,EACJC,MAAO,sBACPC,SAAU,iCACVC,YAAY,uQAGZC,SAAU,8BACVC,KAAK,mBAEP,CACEL,GAAI,EACJC,MAAO,iBACPC,SAAU,cACVC,YAAY,oXAIZC,SAAU,8BACVC,KAAK,gB,kCCDMC,MAxBf,WACE,OACE,yBAAKC,UAAU,gCACb,yBAAKA,UAAU,wBACb,yBACEC,IAAMC,IACNC,IAAI,oBAIR,yBAAKH,UAAU,6EACb,4BAAQA,UAAU,eAChB,yBACEC,IAAMG,IACND,IAAI,qBACJH,UAAU,4BAGd,wBAAIA,UAAU,qBAAd,6C,iBCQOK,MA1Bf,YAAmD,IAAjCX,EAAgC,EAAhCA,MAAOE,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,SAMpC,OACE,yBAAKG,UAAU,oBACb,yBAAKA,UAAU,sCACb,yBAAKA,UAAU,8CACb,kBAAC,IAAD,CACEM,IAAMT,EACNU,MAAM,OACNP,UAAU,kBAKhB,yBAAKA,UAAU,sDACb,wBAAIA,UAAU,mEAAoEN,GAClF,2BAAKE,MCKEY,MAjBf,WACE,OACE,kBAAC,IAAD,KAEIhB,EAAQiB,KAAI,SAAAC,GACV,OAAQ,kBAAC,IAAD,CAAOZ,KAAOY,EAAOZ,KAAOa,IAAMD,EAAOjB,IACvC,kBAAC,EAAD,CAAQC,MAAQgB,EAAOf,SAAWC,YAAcc,EAAOd,YAAcC,SAAWa,EAAOb,eAIrG,kBAAC,IAAD,CAAQC,KAAK,KACX,kBAAC,EAAD,S,QCtBO,SAASc,EAAT,GAA+C,IAA7BC,EAA4B,EAA5BA,SAAaC,EAAe,4BAC3D,OACE,0CACEd,UAAU,8DACLc,GAEHD,GCyBOE,MAvBf,WACE,OACE,yBAAKf,UAAU,YACb,wBAAIA,UAAU,kEACZ,kBAACY,EAAD,KACE,kBAAC,IAAD,CAAMI,GAAG,KAAT,WAGAxB,EAAQiB,KAAI,SAAAC,GACV,OAAO,wBAAIC,IAAMD,EAAOjB,IACf,kBAACmB,EAAD,KACE,kBAAC,IAAD,CAAMI,GAAKN,EAAOZ,MAASY,EAAOhB,eCA1CuB,MAZf,WAEE,OACE,kBAAC,IAAD,CAAQC,SAAWC,kBACjB,yBAAKnB,UAAU,6BACb,kBAAC,EAAD,MACA,kBAAC,EAAD,SCHYoB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.55d6fd9c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/image.85e5ce30.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.e5950b14.png\";","const options = [\r\n  {\r\n    id: 1,\r\n    title: '¿Compras o vendes?',\r\n    subtitle: 'Sé original',\r\n    description: `Ahora todo es más fácil, ahora no hay fronteras para el que compra y para \r\n    el que vende. Le enseñamos a comprar inteligente (lo que es y al precio que es) y si lo \r\n    suyo es el comercio le enseñamos a negociar, a buscar, a comprar al por mayor y al mejor precio.`,\r\n    videoUrl: 'https://player.vimeo.com/video/391359249',\r\n    path:'/codigo-fast'\r\n  },\r\n  {\r\n    id: 2,\r\n    title: '¿Qué hacemos?',\r\n    subtitle: 'Conoce más de Fast Delivery',\r\n    description: `Una empresa de carga, pero con servicios del alma. Lo original, \r\n    lo real, lo del primer mundo, lo que está de moda, lo que no ha llegado al país todavía y \r\n    adicional a todo esto te tira la liga... todo eso en una sola empresa: Fast Delivery.`,\r\n    videoUrl: 'https://vimeo.com/391359649',\r\n    path:'/quiero-comprar'\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Código Fast',\r\n    subtitle: 'Sé lider',\r\n    description: `Crea y refuerza tu empresa. Lealtad, transparencia y originalidad. También brindamos\r\n    todas las facilidades para que te ganes la liga de manera informal, formal o creando tu propia empresa.\r\n    Con los últimos 4 digitos de tu cédula puedes ganarte un porcentaje solo por recomendar la empresa.\r\n    Cuando compren con tu código, vas a ganas comisiones.`,\r\n    videoUrl: 'https://vimeo.com/391359719',\r\n    path:'/casilleros'\r\n  }\r\n]\r\n\r\nexport default options;","import React from \"react\";\r\n\r\nimport image from '../assets/images/image.jpg';\r\nimport logo from \"../assets/images/logo.png\";\r\n\r\nfunction Home() {\r\n  return(\r\n    <div className=\"Home-container-screen h-auto\">\r\n      <div className=\"w-full pr-0 lg:pr-32\">\r\n        <img\r\n          src={ image }\r\n          alt=\"Julian Peña\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"w-full flex flex-col items-center px-4 my-auto sm:px-10 md:px-16 lg:px-40\">\r\n        <figure className=\"w-full px-1\">\r\n          <img\r\n            src={ logo }\r\n            alt=\"Fast Delivery logo\"\r\n            className=\"w-48 md:w-full mx-auto\"\r\n          />\r\n        </figure>\r\n        <h1 className=\"title w-full px-1\">¿Quieres comprar en Estados Unidos?</h1>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\n// import { Player } from 'video-react';\r\nimport ReactPlayer from 'react-player'\r\n\r\nfunction Option({ title, description, videoUrl }) {\r\n  const opts = {\r\n    height: '220px',\r\n    width: '100%'\r\n  };\r\n\r\n  return (\r\n    <div className=\"md:flex relative\">\r\n      <div className=\"md:w-1/2 flex m-auto circle h-80vh\">\r\n        <div className=\"lg:mx-16 md:mx-4 sm:my-4 md:my-auto w-full\">\r\n          <ReactPlayer\r\n            url={ videoUrl }\r\n            width='100%'\r\n            className=\"ReactPlayer\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"md:w-1/2 flex flex-col justify-center px-4 lg:px-8\">\r\n        <h1 className=\"text-gray-700 font-sans font-semibold text-center text-4xl mb-5\">{ title }</h1>\r\n        <p>{ description }</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Option;","import React from 'react';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from 'react-router-dom';\r\n\r\nimport options from './data/options';\r\n\r\nimport Home from './views/Home';\r\nimport Option from './views/Option';\r\n\r\nfunction Routes() {\r\n  return (\r\n    <Switch>\r\n      {\r\n        options.map(option => {\r\n          return  <Route path={ option.path } key={ option.id }>\r\n                    <Option title={ option.subtitle } description={ option.description } videoUrl={ option.videoUrl }/>\r\n                  </Route>\r\n        })\r\n      }\r\n      <Router path=\"/\">\r\n        <Home/>\r\n      </Router>\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default Routes;","import React from \"react\";\r\n\r\nexport default function Button({ children, ...buttonProps }) {\r\n  return (\r\n    <button\r\n      className=\"btn btn-white italic w-auto sm:mb-2 sm:text-xl lg:text-3xl\"\r\n      { ...buttonProps }\r\n    >\r\n      { children }\r\n    </button>\r\n  )\r\n}","import React from 'react';\r\n\r\nimport {\r\n  Link\r\n} from 'react-router-dom';\r\n\r\nimport Button from './Button';\r\n\r\nimport options from '../data/options';\r\n\r\nfunction Nav() {\r\n  return (\r\n    <nav className=\"bg-white\">\r\n      <ul className=\"flex justify-around items-center flex-wrap p-4 h-full sm:mx-16\">\r\n        <Button>\r\n          <Link to=\"/\">Inicio</Link>\r\n        </Button>\r\n        {\r\n          options.map(option => {\r\n            return <li key={ option.id }> \r\n                     <Button>\r\n                       <Link to={ option.path }>{ option.title }</Link>\r\n                     </Button>\r\n                   </li>\r\n          })\r\n        }\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default Nav;","import React from 'react';\n\nimport {\n  BrowserRouter as Router,\n} from 'react-router-dom';\n\nimport Routes from './routes';\nimport Nav from './components/Nav';\n\nfunction App() {\n\n  return (\n    <Router basename={ process.env.PUBLIC_URL }>\n      <div className=\"h-screen container-screen\">\n        <Routes/>\n        <Nav/>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport './App.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}